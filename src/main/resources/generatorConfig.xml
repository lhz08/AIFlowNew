<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!--mybatis-generator配置文件-->
<generatorConfiguration>

    <!--指定属性配置文件，使用springboot的-->
    <properties resource="application.properties"></properties>
    <!--指定数据库的jdbc驱动包位置，需要绝对路径-->
    <classPathEntry location="C:\Users\cuishaohui\.m2\repository\mysql\mysql-connector-java\5.1.35\mysql-connector-java-5.1.35.jar"/>

    <!--
      context:生成一组对象的环境
      id:必选，上下文id，用于在生成错误时提示
      defaultModelType:指定生成对象的样式
          1，conditional：类似hierarchical；如果某张表只有一个字段，则不会生成改实体
          2，flat：所有内容（主键，blob）等全部生成在一个对象中；常用
          3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
      targetRuntime:
          1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
          2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySmple；
      introspectedColumnImpl：类全限定名，用于扩展MBG
  -->
    <context id="mysqlmybatisgenerator" targetRuntime="MyBatis3">
        <!--数据库-->
        <jdbcConnection driverClass="${spring.datasource.driver-class-name}"
                        connectionURL="${spring.datasource.url}"
                        userId="${spring.datasource.username}"
                        password="${spring.datasource.password}" />
        <!-- java模型创建器，是必须要的元素
            负责：1，key类（见context的defaultModelType）；2，java类；3，查询类
            targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
            targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录
         -->
        <javaModelGenerator targetPackage="com.bdilab.aiflow.model" targetProject="src/main/java" >
            <!--  for MyBatis3/MyBatis3Simple
                自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；
            -->
            <property name="constructorBased" value="false"/>

            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <!--<property name="enableSubPackages" value="true"/>-->

            <!-- for MyBatis3 / MyBatis3Simple
                是否创建一个不可变的类，如果为true，
                那么MBG会创建一个没有setter方法的类，取而代之的是类似constructorBased的类
             -->
            <property name="immutable" value="false"/>

            <!-- 设置一个根对象，
                如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项
                注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了，包括：
                    1，属性名相同，类型相同，有相同的getter/setter方法；
             -->
            <!--<property name="rootClass" value="com.intfish.mygenerator.entity.BaseDomain"/>-->

            <!-- 设置是否在getter方法中，对String类型字段调用trim()方法，即去掉前后空格-->
            <property name="trimStrings" value="false"/>
        </javaModelGenerator>


    <!--mapper映射文件目录配置，为每一个数据库表生成对应的SqlMap.xml文件
     注意，在Mybatis3之后，我们可以使用mapper.xml文件+Mapper接口（或者不用mapper接口），
                或者只使用Mapper接口+Annotation，所以，如果 javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置
            targetPackage/targetProject:同javaModelGenerator-->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <!--<property name="enableSubPackages" value="true"/>-->
        </sqlMapGenerator>

        <!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口
           targetPackage/targetProject:同javaModelGenerator
           type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：
               1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；
               2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；
               3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；
           注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER
       -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.bdilab.aiflow.model" targetProject="src/main/java">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <!--<property name="enableSubPackages" value="true"/>-->

            <!-- 可以为所有生成的接口添加一个父接口，但是MBG只负责生成，不负责检查
            <property name="rootInterface" value=""/>
             -->
        </javaClientGenerator>

        <!--数据库表
        tableName:数据库中对应的表
        schema:该表对应的实体类名
        -->

<!--        <table tableName="component_info" schema="ComponentInfo"-->
<!--               enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/>-->

<!--        <table tableName="component_output_stub" schema="Component_Output_Stub"-->
<!--               enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/>-->

<!--        <table tableName="component_parameter" schema="Component_Parameter"-->
<!--               enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/>-->

<!--        <table tableName="custom_component" schema="CustomComponent"-->
<!--               enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/>-->

<!--        <table tableName="dataset" schema="Dataset"-->
<!--               enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/>-->

<!--        <table tableName="experiment" schema="Experiment"-->
<!--               enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/>-->

<!--        <table tableName="experiment_running" schema="ExperimentRunning"-->
<!--               enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/>-->

<!--        <table tableName="graph_type" schema="GraphType"-->
<!--               enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/>-->

<!--        <table tableName="model" schema="Model"-->
<!--               enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/>-->

<!--        <table tableName="system_preset_component" schema="SystemPresetComponent"-->
<!--               enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/>-->

<!--        <table tableName="template" schema="Template"-->
<!--               enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/>-->

<!--        <table tableName="user" schema="User"-->
<!--               enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/>-->

<!--        <table tableName="workflow" schema="Workflow" enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">-->
<!--                <columnOverride column="ggeditor_object_string" javaType="java.lang.String" jdbcType="VARCHAR"/>-->
<!--            <columnOverride column="workflow_desc" javaType="java.lang.String" jdbcType="VARCHAR"/>-->
<!--        </table>-->
        <table tableName="workflow_component" schema="WorkflowComponent"
        enableCountByExample="false" enableUpdateByExample="false"
                       enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"/>


    </context>

</generatorConfiguration>