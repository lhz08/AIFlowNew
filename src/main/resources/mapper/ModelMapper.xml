<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bdilab.aiflow.mapper.ModelMapper" >
    <resultMap id="ResultMap" type="com.bdilab.aiflow.model.Model">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="fk_user_id" jdbcType="INTEGER" property="fkUserId" />
        <result column="fk_running_id" jdbcType="INTEGER" property="fkRunningId" />
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
        <result column="model_file_addr" jdbcType="VARCHAR" property="modelFileAddr" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="model_desc" jdbcType="VARCHAR" property="modelDesc" />
    </resultMap>
    <insert id="insertModel" useGeneratedKeys="true" keyProperty="id" parameterType="com.bdilab.aiflow.model.Model">
        INSERT INTO model(name,fk_user_id,fk_running_id,is_saved,fk_component_id,is_deleted,model_file_addr,create_time,model_desc)
        VALUES (#{name},#{fkUserId},#{fkRunningId},#{isSaved},#{fkComponentId},#{isDeleted},#{modelFileAddr},#{createTime},#{modelDesc})
    </insert>

    <select id="getModelByUser" resultMap="ResultMap">
            select *
            from model
            where fk_user_id=#{userId} and is_deleted=0 and is_saved=1
    </select>

    <select id="selectModelById" resultType="com.bdilab.aiflow.model.Model" parameterType="Integer">
           select model.id as id,
                model.name as name,
                model.fk_user_id as fkUserId,
                model.fk_component_id as fkComponentId,
                model.is_saved as isSaved,
                model.fk_running_id as fkRunningId,
                model.is_deleted as isDeleted,
                model.model_file_addr as modelFileAddr,
                model.model_desc as modelDesc,
                model.create_time as createTime
                from model
        where model.id=#{modelId}
    </select>

    <update id="editModel" parameterType="com.bdilab.aiflow.model.Model">
        update model
        set name=#{name},model_desc=#{modelDesc}
        where id=#{id}
    </update>

    <update id="deleteModelById" parameterType="Integer">
        update model
        set is_deleted=1
        where id=#{modelId}
    </update>

    <delete id="deleteModelCompletelyById" parameterType="Integer">
        delete from model
        where id=#{modelId} and is_deleted=1
     </delete>

    <select id="getModelInTrash" parameterType="Integer" resultMap="ResultMap">
        select *
        from model
        where is_deleted=1 and fk_user_id=#{userId}
    </select>

    <update id="restoreModel" parameterType="Integer">
        update model
        set is_deleted=0
        where id=#{modelId}
    </update>

    <select id="fuzzySelectModelByName" resultMap="ResultMap">
        select *
        from model
        where is_deleted=0 and fk_user_id=#{userId}
        <if test="modelName!=null">and model.name like '%${modelName}%'</if>
        order by create_time desc
    </select>

    <select id="getModelById"  parameterType="Integer" resultType="com.bdilab.aiflow.model.Model">
         select model.id as id,
                model.name as name,
                model.fk_running_id as fkRunningId ,
                model.is_deleted as isDeleted,
                model.model_file_addr as modelFileAddr,
                model.model_desc as modelDesc,
                model.create_time as createTime
         from model
         where model.id = #{id}
    </select>

    <select id="getAllModelByRunningId"  parameterType="Integer" resultType="com.bdilab.aiflow.model.Model">
         select model.id as id,
                model.name as name,
                model.fk_running_id as fkRunningId,
                model.is_deleted as isDeleted,
                model.model_file_addr as modelFileAddr,
                model.model_desc as modelDesc,
                model.create_time as createTime
         from model
         where model.fk_running_id = #{fkRunningId}
    </select>

    <select id="getAllModelByRunningIdAndIsDeleted"  parameterType="Integer" resultType="com.bdilab.aiflow.model.Model">
         select model.id as id,
                model.name as name,
                model.fk_user_id as fkUserId,
                model.fk_component_id as fkComponentId,
                model.fk_running_id as fkRunningId,
                model.is_saved as isSaved,
                model.is_deleted as isDeleted,
                model.model_file_addr as modelFileAddr,
                model.model_desc as modelDesc,
                model.create_time as createTime
         from model
         where model.fk_running_id = #{runningId} and model.is_deleted = ${isDeleted}
    </select>

    <!--更新model信息-->
    <update id="updateModel"  parameterType="com.bdilab.aiflow.model.Model">
        update model
        <trim prefix="set" suffixOverrides=",">
            <if test="name!=null">name=#{name},</if>
            <if test="fkUserId!=null">fk_user_id=#{fkUserId},</if>
            <if test="fkComponentId!=null">fk_component_id=#{fkComponentId},</if>
            <if test="fkRunningId!=null">fk_running_id=#{fkRunningId},</if>
            <if test="isSaved!=null">is_saved=#{isSaved},</if>
            <if test="modelDesc!=null">model_desc=#{modelDesc},</if>
            <if test="modelFileAddr!=null">model_file_addr=#{modelFileAddr},</if>
            <if test="isDeleted!=null">is_deleted=#{isDeleted},</if>
            <if test="createTime!=null">create_time=#{createTime}</if>
        </trim>
        where model.id=#{id}
    </update>

    <!--将fkRunningId为null-->
    <update id="updateRunningIdNull"  parameterType="Integer">
        update model
        set model.fk_running_id=null
        where model.id=#{modelid}
    </update>

    <select id="getExperienceId" parameterType="Integer" resultType="Integer">
        select IFNULL(MAX(model.fk_running_id),0) AS fkRunningId
        from model
        where model.id = #{id}
    </select>
</mapper>