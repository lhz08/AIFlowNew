package com.bdilab.aiflow.model.job;

import com.bdilab.aiflow.model.run.ApiPipelineSpec;

public class ApiJob {

    /*Output. Unique run ID. Generated by API server.*/
    private String id;

    /*Required input field. Job name provided by user. Not unique.*/
    private String name;

    /**/
    private String description;

    /*Required input field. Describing what the pipeline manifest and parameters to use for the scheduled job.*/
    private ApiPipelineSpec pipeline_spec;

    /*Optional input field. Specify which resource this job belongs to.*/
    private Object[] resource_references;

    /*Optional input field. Specify which Kubernetes service account this job uses.*/
    private String service_account;

    /**/
    private String max_concurrency;

    /*Required input field. Specify how a run is triggered. Support cron mode or periodic mode.*/
    private ApiTrigger trigger;

    /*x âˆˆ { UNKNOWN_MODE (default) , ENABLED , DISABLED }
    Required input.
    DISABLED: The job won't schedule any run if disabled.*/
    private String mode = "UNKNOWN_MODE";

    /*Output. The time this job is created.*/
    private String created_at;

    /*Output. The last time this job is updated.*/
    private String updated_at;

    /**/
    private String status;

    /*In case any error happens retrieving a job field, only job ID and the error message is returned. Client has the flexibility of choosing how to handle error. This is especially useful during listing call.*/
    private String error;

    /*Input. Whether the job is enabled or not.*/
    private Boolean enabled;

    /*Optional input field. Whether the job should catch up if behind schedule. If true, the job will only schedule the latest interval if behind schedule. If false, the job will catch up on each past interval.*/
    private Boolean no_catchup;

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public ApiPipelineSpec getPipeline_spec() {
        return pipeline_spec;
    }

    public void setPipeline_spec(ApiPipelineSpec pipeline_spec) {
        this.pipeline_spec = pipeline_spec;
    }

    public Object[] getResource_references() {
        return resource_references;
    }

    public void setResource_references(Object[] resource_references) {
        this.resource_references = resource_references;
    }

    public String getService_account() {
        return service_account;
    }

    public void setService_account(String service_account) {
        this.service_account = service_account;
    }

    public String getMax_concurrency() {
        return max_concurrency;
    }

    public void setMax_concurrency(String max_concurrency) {
        this.max_concurrency = max_concurrency;
    }

    public ApiTrigger getTrigger() {
        return trigger;
    }

    public void setTrigger(ApiTrigger trigger) {
        this.trigger = trigger;
    }

    public String getMode() {
        return mode;
    }

    public void setMode(String mode) {
        this.mode = mode;
    }

    public String getCreated_at() {
        return created_at;
    }

    public void setCreated_at(String created_at) {
        this.created_at = created_at;
    }

    public String getUpdated_at() {
        return updated_at;
    }

    public void setUpdated_at(String updated_at) {
        this.updated_at = updated_at;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public String getError() {
        return error;
    }

    public void setError(String error) {
        this.error = error;
    }

    public Boolean getEnabled() {
        return enabled;
    }

    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    public Boolean getNo_catchup() {
        return no_catchup;
    }

    public void setNo_catchup(Boolean no_catchup) {
        this.no_catchup = no_catchup;
    }
}
